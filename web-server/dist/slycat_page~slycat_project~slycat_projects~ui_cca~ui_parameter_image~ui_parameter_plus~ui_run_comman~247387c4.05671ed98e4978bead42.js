(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["slycat_page~slycat_project~slycat_projects~ui_cca~ui_parameter_image~ui_parameter_plus~ui_run_comman~247387c4"],{

/***/ "./web-server/js/slycat-api-root.js":
/*!******************************************!*\
  !*** ./web-server/js/slycat-api-root.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\n retains certain rights in this software. */\n\nexports.default = \"/api/\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWItc2VydmVyL2pzL3NseWNhdC1hcGktcm9vdC5qcz85MTc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7a0JBSWUsTyIsImZpbGUiOiIuL3dlYi1zZXJ2ZXIvanMvc2x5Y2F0LWFwaS1yb290LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IChjKSAyMDEzLCAyMDE4IE5hdGlvbmFsIFRlY2hub2xvZ3kgYW5kIEVuZ2luZWVyaW5nIFNvbHV0aW9ucyBvZiBTYW5kaWEsIExMQyAuIFVuZGVyIHRoZSB0ZXJtcyBvZiBDb250cmFjdFxuIERFLU5BMDAwMzUyNSB3aXRoIE5hdGlvbmFsIFRlY2hub2xvZ3kgYW5kIEVuZ2luZWVyaW5nIFNvbHV0aW9ucyBvZiBTYW5kaWEsIExMQywgdGhlIFUuUy4gR292ZXJubWVudFxuIHJldGFpbnMgY2VydGFpbiByaWdodHMgaW4gdGhpcyBzb2Z0d2FyZS4gKi9cblxuZXhwb3J0IGRlZmF1bHQgXCIvYXBpL1wiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./web-server/js/slycat-api-root.js\n");

/***/ }),

/***/ "./web-server/js/slycat-server-root.js":
/*!*********************************************!*\
  !*** ./web-server/js/slycat-server-root.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\n retains certain rights in this software. */\n\n// export default $(\"#slycat-server-root\").attr(\"href\");\nexports.default = \"/\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWItc2VydmVyL2pzL3NseWNhdC1zZXJ2ZXItcm9vdC5qcz9iMDI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7QUFJQTtrQkFDZSxHIiwiZmlsZSI6Ii4vd2ViLXNlcnZlci9qcy9zbHljYXQtc2VydmVyLXJvb3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMTMsIDIwMTggTmF0aW9uYWwgVGVjaG5vbG9neSBhbmQgRW5naW5lZXJpbmcgU29sdXRpb25zIG9mIFNhbmRpYSwgTExDIC4gVW5kZXIgdGhlIHRlcm1zIG9mIENvbnRyYWN0XG4gREUtTkEwMDAzNTI1IHdpdGggTmF0aW9uYWwgVGVjaG5vbG9neSBhbmQgRW5naW5lZXJpbmcgU29sdXRpb25zIG9mIFNhbmRpYSwgTExDLCB0aGUgVS5TLiBHb3Zlcm5tZW50XG4gcmV0YWlucyBjZXJ0YWluIHJpZ2h0cyBpbiB0aGlzIHNvZnR3YXJlLiAqL1xuXG4vLyBleHBvcnQgZGVmYXVsdCAkKFwiI3NseWNhdC1zZXJ2ZXItcm9vdFwiKS5hdHRyKFwiaHJlZlwiKTtcbmV4cG9ydCBkZWZhdWx0IFwiL1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./web-server/js/slycat-server-root.js\n");

/***/ }),

/***/ "./web-server/js/slycat-web-client-webpack.js":
/*!****************************************************!*\
  !*** ./web-server/js/slycat-web-client-webpack.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slycatApiRoot = __webpack_require__(/*! js/slycat-api-root */ \"./web-server/js/slycat-api-root.js\");\n\nvar _slycatApiRoot2 = _interopRequireDefault(_slycatApiRoot);\n\nvar _urijs = __webpack_require__(/*! urijs */ \"./node_modules/urijs/src/URI.js\");\n\nvar _urijs2 = _interopRequireDefault(_urijs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\n retains certain rights in this software. */\n\nvar _module = {};\n\n/**\n * delete a model for a Slycat project\n * @param params: object{\n * mid: model id that is to be deleted from the Slycat project\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.delete_model = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * delete a project in Slycat\n * @param params: object{\n * pid: project id of project that is to be deleted from the Slycat\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.delete_project = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * delete a reference in Slycat\n * @param params: object{\n * rid: reference id of reference that is to be deleted from Slycat\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.delete_reference = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"references/\" + params.rid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * delete a remote ssh session from the Slycat server\n * @param params: object{\n * sid: session id of open session that is to be deleted from Slycat\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.delete_remote = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"remotes/\" + params.sid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * delete a temp upload file from the slycat server\n * generally you would call this if there was an error in the upload or\n * if the file was successfully uploaded for cleanup purposes. note that\n * Uploads are considered temporary and only should be used as a mean to\n * transport files to the server\n * @param params: object{\n * uid: upload id of the partial or fully uploaded file to be deleted from Slycat\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.delete_upload = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"uploads/\" + params.uid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n *\n * @param params: object{\n * success(result): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.get_configuration_markings = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/markings\",\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_parsers = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/parsers\",\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_support_email = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/support-email\",\n    success: function success(email) {\n      if (params.success) params.success(email);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_injected_code = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/injected-code\",\n    success: function success(injected_code) {\n      if (params.success) params.success(injected_code);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_ga_tracking_id = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/ga-tracking-id\",\n    success: function success(id) {\n      if (params.success) params.success(id);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_remote_hosts = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/remote-hosts\",\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_version = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/version\",\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_wizards = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/wizards\",\n    success: function success(wizards) {\n      if (params.success) params.success(wizards);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_configuration_agent_functions = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"configuration/agent-functions\",\n    success: function success(fns) {\n      if (params.success) params.success(fns);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_file = function (params) {\n  $.ajax({\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'models/' + params.mid + '/files/' + params.aid,\n    success: function success(content) {\n      if (params.success) params.success(content);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_arrayset_metadata = function (params) {\n  var search = {};\n  if (params.arrays) search.arrays = params.arrays;\n  if (params.statistics) search.statistics = params.statistics;\n  if (params.unique) search.unique = params.unique;\n\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: (0, _urijs2.default)(_slycatApiRoot2.default + \"models/\" + params.mid + \"/arraysets/\" + params.aid + \"/metadata\").search(search).toString(),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_arrayset_data = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: (0, _urijs2.default)(_slycatApiRoot2.default + \"models/\" + params.mid + \"/arraysets/\" + params.aid + \"/data\").search({ \"hyperchunks\": params.hyperchunks }).toString(),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_command = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: (0, _urijs2.default)(_slycatApiRoot2.default + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_model_command = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"POST\",\n    url: (0, _urijs2.default)(_slycatApiRoot2.default + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_sensitive_model_command = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/sensitive/\" + params.type + \"/\" + params.command,\n    data: JSON.stringify(params.parameters || {}),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_model_command = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"PUT\",\n    url: (0, _urijs2.default)(_slycatApiRoot2.default + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_parameter = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/parameters/\" + params.aid,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_model_table_metadata = function (params) {\n  console.log(\"slycat-web-client.get_model_table_metadata() is deprecated, use get_model_arrayset_metadata() instead.\");\n\n  var url = _slycatApiRoot2.default + \"models/\" + params.mid + \"/tables/\" + params.aid + \"/arrays/\" + (params.array || \"0\") + \"/metadata\";\n  if (params.index) url += \"?index=\" + params.index;\n\n  //    //other section\n  //    var new_url = api_root + \"models/\" + params.mid + \"/arraysets/\" + params.aid +  \"/metadata?arrays=\" + (params.array || \"0\") + \"%3b1&\" +\"statistics=0\";\n  ////    if(params.index)\n  ////      new_url += \"?index=\" + params.index;\n  //    $.ajax(\n  //    {\n  //      dataType: \"json\",\n  //      type: \"GET\",\n  //      url: new_url,\n  //      success: function(result)\n  //      {\n  //        if(params.success)\n  //          console.log(\"\\nNEW:  \" + new_url + \"\\n\" + JSON.stringify(result) +\"\\n\");\n  //          //params.success(result);\n  //      },\n  //      error: function(request, status, reason_phrase)\n  //      {\n  //        if(params.error)\n  //          console.log(\"\\nNEW:  \" + url + \"\\n\" + request + reason_phrase + status +\"\\n\");\n  //          //params.error(request, status, reason_phrase);\n  //      },\n  //    });\n  //    //END other section\n\n\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: url,\n    success: function success(result) {\n      if (params.success)\n        //console.log(\"\\nOLD:  \" + url + \"\\n\" + JSON.stringify(result) +\"\\n\");\n        params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_project_references = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid + \"/references\",\n    success: function success(references) {\n      if (params.success) params.success(references);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_remotes = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"remotes/\" + params.hostname,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_remote_video_status = function (params) {\n  $.ajax({\n    dataType: \"json\",\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"remotes/\" + params.sid + \"/videos/\" + params.vsid + \"/status\",\n    success: function success(metadata) {\n      if (params.success) params.success(metadata);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_user = function (params) {\n  $.ajax({\n    type: \"GET\",\n    url: _slycatApiRoot2.default + \"users/\" + (params.uid || \"-\"),\n    success: function success(user) {\n      if (params.success) params.success(user);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_event = function (params) {\n  $.ajax({\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"events/\" + params.path,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_model_files = function (params) {\n  var data = new FormData();\n  data.append(\"input\", params.input ? true : false);\n  data.append(\"parser\", params.parser);\n  data.append(\"aids\", params.aids);\n  if (params.sids && params.paths) {\n    data.append(\"sids\", params.sids);\n    data.append(\"paths\", params.paths);\n  } else if (params.files) {\n    for (var i = 0; i != params.files.length; ++i) {\n      data.append(\"files\", params.files[i]);\n    }\n  }\n\n  $.ajax({\n    contentType: false,\n    processData: false,\n    data: data,\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/files\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_model_finish = function (params) {\n  $.ajax({\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/finish\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_projects = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      \"name\": params.name,\n      \"description\": params.description || \"\"\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"projects\",\n    success: function success(result) {\n      if (params.success) params.success(result.id);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_project_models = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      \"model-type\": params.type,\n      \"name\": params.name,\n      \"description\": params.description || \"\",\n      \"marking\": params.marking || \"\"\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid + \"/models\",\n    success: function success(result) {\n      if (params.success) params.success(result.id);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_project_references = function (params) {\n  var data = {};\n  data.name = params.name;\n  if (\"model-type\" in params) data[\"model-type\"] = params[\"model-type\"];\n  if (\"mid\" in params) data.mid = params.mid;\n  if (\"bid\" in params) data.bid = params.bid;\n\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify(data),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid + \"/references\",\n    success: function success(result) {\n      if (params.success) params.success(result.id);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * put a reference in Slycat\n * @param params: object{\n * rid: reference id of reference that is to be updated\n * success(): function called upon success\n * error(request, status, reason_phrase): function called upon error\n * }\n */\n_module.put_reference = function (params) {\n  var data = {};\n  if (\"name\" in params) data[\"name\"] = params[\"name\"];\n  if (\"bid\" in params) data[\"bid\"] = params[\"bid\"];\n\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify(data),\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"references/\" + params.rid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_remotes = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      hostname: params.hostname,\n      username: params.username,\n      password: params.password,\n      agent: params.agent !== undefined ? params.agent : null\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"remotes\",\n    success: function success(result) {\n      if (params.success) params.success(result.sid);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_session_status = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + '/session-status',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_remote_launch = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    data: JSON.stringify({\n      command: params.command\n    }),\n    type: 'POST',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + '/launch',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_submit_batch = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    data: JSON.stringify({\n      filename: params.filename\n    }),\n    type: 'POST',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + 'submit-batch',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_checkjob = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'remotes/checkjob/' + params.hostname + \"/\" + params.jid,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.delete_job = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'DELETE',\n    url: _slycatApiRoot2.default + 'remotes/delete-job/' + params.hostname + '/' + params.jid,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_job_output = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'remotes/get-job-output/' + params.hostname + \"/\" + params.jid + \"/path\" + params.path,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_user_config = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + '/get-user-config',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.set_user_config = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    data: JSON.stringify({\n      config: params.config\n    }),\n    type: 'POST',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + '/set-user-config',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_agent_function = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    data: JSON.stringify({\n      wckey: params.wckey,\n      nnodes: params.nnodes,\n      partition: params.partition,\n      ntasks_per_node: params.ntasks_per_node,\n      ntasks: params.ntasks,\n      ncpu_per_task: params.ncpu_per_task,\n      time_hours: params.time_hours,\n      time_minutes: params.time_minutes,\n      time_seconds: params.time_seconds,\n      fn: params.fn,\n      fn_params: params.fn_params,\n      uid: params.uid\n    }),\n    type: 'POST',\n    url: _slycatApiRoot2.default + 'remotes/' + params.hostname + '/run-agent-function',\n    success: function success(response) {\n      if (params.success) params.success(response);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_remote_browse = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({}),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"remotes/\" + params.hostname + \"/browse\" + params.path,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_uploads = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      \"mid\": params.mid,\n      \"input\": params.input,\n      \"parser\": params.parser,\n      \"aids\": params.aids\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"uploads\",\n    success: function success(result) {\n      if (params.success) params.success(result.id);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_log = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      \"message\": params.message\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"log\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.post_upload_finished = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      \"uploaded\": params.uploaded\n    }),\n    type: \"POST\",\n    url: _slycatApiRoot2.default + \"uploads/\" + params.uid + \"/finished\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_model_inputs = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      sid: params.sid,\n      \"deep-copy\": params[\"deep-copy\"] || false\n    }),\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/inputs\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_model_parameter = function (params) {\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify({\n      value: params.value,\n      input: params.input === undefined ? true : params.input ? true : false\n    }),\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid + \"/parameters/\" + params.aid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_project = function (params) {\n  var project = {};\n  if (\"name\" in params) project.name = params.name;\n  if (\"description\" in params) project.description = params.description;\n  if (\"acl\" in params) project.acl = params.acl;\n\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify(project),\n    processData: false,\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.delete_project_cache = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"projects/\" + params.pid + \"/delete-cache\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n/**\n * delete model artifacts from the nosql database\n * @param params\n * {\n *  mid:model_id,\n *  aid:artifact_id,\n *  success:func(called on ajax success),\n *  error:func(called on ajax error)\n * }\n */\n_module.delete_model_parameter = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"delete-artifact/\" + params.mid + \"/\" + params.aid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_model = function (params) {\n  var model = {};\n  if (\"name\" in params) model.name = params.name;\n  if (\"description\" in params) model.description = params.description;\n  if (\"marking\" in params) model.marking = params.marking;\n  if (\"state\" in params) model.state = params.state;\n\n  $.ajax({\n    contentType: \"application/json\",\n    data: JSON.stringify(model),\n    processData: false,\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"models/\" + params.mid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.put_upload_file_part = function (params) {\n\n  var data = new FormData();\n  if (params.hostname && params.path) {\n    //      console.log(\"if? sid \"+params.sid+\"path \"+params.path+\"file \"+params.file);\n    data.append(\"hostname\", params.hostname);\n    data.append(\"path\", params.path);\n  } else if (params.file) {\n    //      console.log(\"if else? sid \"+params.sid+\"path \"+params.path+\"file \"+params.file);\n    data.append(\"file\", params.file);\n  }\n\n  $.ajax({\n    contentType: false,\n    processData: false,\n    data: data,\n    type: \"PUT\",\n    url: _slycatApiRoot2.default + \"uploads/\" + params.uid + \"/files/\" + params.fid + \"/parts/\" + params.pid,\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.sign_out = function (params) {\n  $.ajax({\n    type: \"DELETE\",\n    url: _slycatApiRoot2.default + \"logout\",\n    success: function success() {\n      if (params.success) params.success();\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.job_time = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'remotes/' + params.nodes + \"/\" + params.tasks + \"/\" + params.size + \"/job-time\",\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_time_series_names = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + \"remotes/\" + params.hostname + \"/time_series_names/file\" + params.path,\n    success: function success(result) {\n      //console.log(\"result \"+JSON.stringify(result))\n      if (params.success) return params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_project = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'projects/' + params.pid,\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_projects = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'projects_list',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\n\n_module.get_project_models = function (params) {\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: _slycatApiRoot2.default + 'projects/' + params.pid + '/models',\n    success: function success(result) {\n      if (params.success) params.success(result);\n    },\n    error: function error(request, status, reason_phrase) {\n      if (params.error) params.error(request, status, reason_phrase);\n    }\n  });\n};\nexports.default = _module;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWItc2VydmVyL2pzL3NseWNhdC13ZWItY2xpZW50LXdlYnBhY2suanM/ZmFhNCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJkZWxldGVfbW9kZWwiLCJwYXJhbXMiLCIkIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJhcGlfcm9vdCIsIm1pZCIsInN1Y2Nlc3MiLCJlcnJvciIsInJlcXVlc3QiLCJzdGF0dXMiLCJyZWFzb25fcGhyYXNlIiwiZGVsZXRlX3Byb2plY3QiLCJwaWQiLCJkZWxldGVfcmVmZXJlbmNlIiwicmlkIiwiZGVsZXRlX3JlbW90ZSIsInNpZCIsImRlbGV0ZV91cGxvYWQiLCJ1aWQiLCJnZXRfY29uZmlndXJhdGlvbl9tYXJraW5ncyIsImRhdGFUeXBlIiwicmVzdWx0IiwiZ2V0X2NvbmZpZ3VyYXRpb25fcGFyc2VycyIsImdldF9jb25maWd1cmF0aW9uX3N1cHBvcnRfZW1haWwiLCJlbWFpbCIsImdldF9jb25maWd1cmF0aW9uX2luamVjdGVkX2NvZGUiLCJpbmplY3RlZF9jb2RlIiwiZ2V0X2NvbmZpZ3VyYXRpb25fZ2FfdHJhY2tpbmdfaWQiLCJpZCIsImdldF9jb25maWd1cmF0aW9uX3JlbW90ZV9ob3N0cyIsImdldF9jb25maWd1cmF0aW9uX3ZlcnNpb24iLCJnZXRfY29uZmlndXJhdGlvbl93aXphcmRzIiwid2l6YXJkcyIsImdldF9jb25maWd1cmF0aW9uX2FnZW50X2Z1bmN0aW9ucyIsImZucyIsImdldF9tb2RlbCIsImdldF9tb2RlbF9maWxlIiwiYWlkIiwiY29udGVudCIsImdldF9tb2RlbF9hcnJheXNldF9tZXRhZGF0YSIsInNlYXJjaCIsImFycmF5cyIsInN0YXRpc3RpY3MiLCJ1bmlxdWUiLCJ0b1N0cmluZyIsImdldF9tb2RlbF9hcnJheXNldF9kYXRhIiwiaHlwZXJjaHVua3MiLCJnZXRfbW9kZWxfY29tbWFuZCIsImNvbW1hbmQiLCJwYXJhbWV0ZXJzIiwicG9zdF9tb2RlbF9jb21tYW5kIiwicG9zdF9zZW5zaXRpdmVfbW9kZWxfY29tbWFuZCIsImNvbnRlbnRUeXBlIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwdXRfbW9kZWxfY29tbWFuZCIsImdldF9tb2RlbF9wYXJhbWV0ZXIiLCJnZXRfbW9kZWxfdGFibGVfbWV0YWRhdGEiLCJjb25zb2xlIiwibG9nIiwiYXJyYXkiLCJpbmRleCIsImdldF9wcm9qZWN0X3JlZmVyZW5jZXMiLCJyZWZlcmVuY2VzIiwiZ2V0X3JlbW90ZXMiLCJob3N0bmFtZSIsImdldF9yZW1vdGVfdmlkZW9fc3RhdHVzIiwidnNpZCIsIm1ldGFkYXRhIiwiZ2V0X3VzZXIiLCJ1c2VyIiwicG9zdF9ldmVudCIsInBhdGgiLCJwb3N0X21vZGVsX2ZpbGVzIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJpbnB1dCIsInBhcnNlciIsImFpZHMiLCJzaWRzIiwicGF0aHMiLCJmaWxlcyIsImkiLCJsZW5ndGgiLCJwcm9jZXNzRGF0YSIsInBvc3RfbW9kZWxfZmluaXNoIiwicG9zdF9wcm9qZWN0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInBvc3RfcHJvamVjdF9tb2RlbHMiLCJtYXJraW5nIiwicG9zdF9wcm9qZWN0X3JlZmVyZW5jZXMiLCJiaWQiLCJwdXRfcmVmZXJlbmNlIiwicG9zdF9yZW1vdGVzIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImFnZW50IiwidW5kZWZpbmVkIiwiZ2V0X3Nlc3Npb25fc3RhdHVzIiwicG9zdF9yZW1vdGVfbGF1bmNoIiwicG9zdF9zdWJtaXRfYmF0Y2giLCJmaWxlbmFtZSIsImdldF9jaGVja2pvYiIsImppZCIsImRlbGV0ZV9qb2IiLCJnZXRfam9iX291dHB1dCIsImdldF91c2VyX2NvbmZpZyIsInNldF91c2VyX2NvbmZpZyIsImNvbmZpZyIsInBvc3RfYWdlbnRfZnVuY3Rpb24iLCJ3Y2tleSIsIm5ub2RlcyIsInBhcnRpdGlvbiIsIm50YXNrc19wZXJfbm9kZSIsIm50YXNrcyIsIm5jcHVfcGVyX3Rhc2siLCJ0aW1lX2hvdXJzIiwidGltZV9taW51dGVzIiwidGltZV9zZWNvbmRzIiwiZm4iLCJmbl9wYXJhbXMiLCJyZXNwb25zZSIsInBvc3RfcmVtb3RlX2Jyb3dzZSIsInBvc3RfdXBsb2FkcyIsInBvc3RfbG9nIiwibWVzc2FnZSIsInBvc3RfdXBsb2FkX2ZpbmlzaGVkIiwidXBsb2FkZWQiLCJwdXRfbW9kZWxfaW5wdXRzIiwicHV0X21vZGVsX3BhcmFtZXRlciIsInZhbHVlIiwicHV0X3Byb2plY3QiLCJwcm9qZWN0IiwiYWNsIiwiZGVsZXRlX3Byb2plY3RfY2FjaGUiLCJkZWxldGVfbW9kZWxfcGFyYW1ldGVyIiwicHV0X21vZGVsIiwibW9kZWwiLCJzdGF0ZSIsInB1dF91cGxvYWRfZmlsZV9wYXJ0IiwiZmlsZSIsImZpZCIsInNpZ25fb3V0Iiwiam9iX3RpbWUiLCJub2RlcyIsInRhc2tzIiwic2l6ZSIsImdldF90aW1lX3Nlcmllc19uYW1lcyIsImdldF9wcm9qZWN0IiwiZ2V0X3Byb2plY3RzIiwiZ2V0X3Byb2plY3RfbW9kZWxzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQTs7OztBQUNBOzs7Ozs7QUFMQTs7OztBQU9BLElBQUlBLFVBQVMsRUFBYjs7QUFFQTs7Ozs7Ozs7QUFRQUEsUUFBT0MsWUFBUCxHQUFzQixVQUFTQyxNQUFULEVBQ3RCO0FBQ0VDLElBQUVDLElBQUYsQ0FDQTtBQUNFQyxVQUFNLFFBRFI7QUFFRUMsU0FBS0MsMEJBQVcsU0FBWCxHQUF1QkwsT0FBT00sR0FGckM7QUFHRUMsYUFBUyxtQkFDVDtBQUNFLFVBQUdQLE9BQU9PLE9BQVYsRUFDRVAsT0FBT08sT0FBUDtBQUNILEtBUEg7QUFRRUMsV0FBTyxlQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQkMsYUFBMUIsRUFDUDtBQUNFLFVBQUdYLE9BQU9RLEtBQVYsRUFDRVIsT0FBT1EsS0FBUCxDQUFhQyxPQUFiLEVBQXNCQyxNQUF0QixFQUE4QkMsYUFBOUI7QUFDSDtBQVpILEdBREE7QUFlRCxDQWpCRDs7QUFtQkE7Ozs7Ozs7O0FBUUFiLFFBQU9j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QUFDTG1ELGlCQUFhLGtCQURSO0FBRUxsRCxVQUFNLEtBRkQ7QUFHTEMsU0FBS0MsMEJBQVcsZUFIWDtBQUlMRSxhQUFTLGlCQUFTZSxNQUFULEVBQWlCO0FBQ3hCLFVBQUl0QixPQUFPTyxPQUFYLEVBQ0VQLE9BQU9PLE9BQVAsQ0FBZWUsTUFBZjtBQUNILEtBUEk7QUFRTGQsV0FBTyxlQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQkMsYUFBMUIsRUFBeUM7QUFDOUMsVUFBSVgsT0FBT1EsS0FBWCxFQUNFUixPQUFPUSxLQUFQLENBQWFDLE9BQWIsRUFBc0JDLE1BQXRCLEVBQThCQyxhQUE5QjtBQUNIO0FBWEksR0FBUDtBQWFELENBZEQ7O0FBZ0JBYixRQUFPMkosa0JBQVAsR0FBNEIsVUFBU3pKLE1BQVQsRUFBaUI7QUFDM0NDLElBQUVDLElBQUYsQ0FBTztBQUNMbUQsaUJBQWEsa0JBRFI7QUFFTGxELFVBQU0sS0FGRDtBQUdMQyxTQUFLQywwQkFBVyxXQUFYLEdBQXdCTCxPQUFPYSxHQUEvQixHQUFxQyxTQUhyQztBQUlMTixhQUFTLGlCQUFTZSxNQUFULEVBQWlCO0FBQ3hCLFVBQUl0QixPQUFPTyxPQUFYLEVBQ0VQLE9BQU9PLE9BQVAsQ0FBZWUsTUFBZjtBQUNILEtBUEk7QUFRTGQsV0FBTyxlQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQkMsYUFBMUIsRUFBeUM7QUFDOUMsVUFBSVgsT0FBT1EsS0FBWCxFQUNFUixPQUFPUSxLQUFQLENBQWFDLE9BQWIsRUFBc0JDLE1BQXRCLEVBQThCQyxhQUE5QjtBQUNIO0FBWEksR0FBUDtBQWFELENBZEQ7a0JBZWViLE8iLCJmaWxlIjoiLi93ZWItc2VydmVyL2pzL3NseWNhdC13ZWItY2xpZW50LXdlYnBhY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMTMsIDIwMTggTmF0aW9uYWwgVGVjaG5vbG9neSBhbmQgRW5naW5lZXJpbmcgU29sdXRpb25zIG9mIFNhbmRpYSwgTExDIC4gVW5kZXIgdGhlIHRlcm1zIG9mIENvbnRyYWN0XG4gREUtTkEwMDAzNTI1IHdpdGggTmF0aW9uYWwgVGVjaG5vbG9neSBhbmQgRW5naW5lZXJpbmcgU29sdXRpb25zIG9mIFNhbmRpYSwgTExDLCB0aGUgVS5TLiBHb3Zlcm5tZW50XG4gcmV0YWlucyBjZXJ0YWluIHJpZ2h0cyBpbiB0aGlzIHNvZnR3YXJlLiAqL1xuXG5pbXBvcnQgYXBpX3Jvb3QgZnJvbSBcImpzL3NseWNhdC1hcGktcm9vdFwiO1xuaW1wb3J0IFVSSSBmcm9tIFwidXJpanNcIjtcblxudmFyIG1vZHVsZSA9IHt9O1xuXG4vKipcbiAqIGRlbGV0ZSBhIG1vZGVsIGZvciBhIFNseWNhdCBwcm9qZWN0XG4gKiBAcGFyYW0gcGFyYW1zOiBvYmplY3R7XG4gKiBtaWQ6IG1vZGVsIGlkIHRoYXQgaXMgdG8gYmUgZGVsZXRlZCBmcm9tIHRoZSBTbHljYXQgcHJvamVjdFxuICogc3VjY2VzcygpOiBmdW5jdGlvbiBjYWxsZWQgdXBvbiBzdWNjZXNzXG4gKiBlcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpOiBmdW5jdGlvbiBjYWxsZWQgdXBvbiBlcnJvclxuICogfVxuICovXG5tb2R1bGUuZGVsZXRlX21vZGVsID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICB0eXBlOiBcIkRFTEVURVwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcIm1vZGVscy9cIiArIHBhcmFtcy5taWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIGRlbGV0ZSBhIHByb2plY3QgaW4gU2x5Y2F0XG4gKiBAcGFyYW0gcGFyYW1zOiBvYmplY3R7XG4gKiBwaWQ6IHByb2plY3QgaWQgb2YgcHJvamVjdCB0aGF0IGlzIHRvIGJlIGRlbGV0ZWQgZnJvbSB0aGUgU2x5Y2F0XG4gKiBzdWNjZXNzKCk6IGZ1bmN0aW9uIGNhbGxlZCB1cG9uIHN1Y2Nlc3NcbiAqIGVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk6IGZ1bmN0aW9uIGNhbGxlZCB1cG9uIGVycm9yXG4gKiB9XG4gKi9cbm1vZHVsZS5kZWxldGVfcHJvamVjdCA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgdHlwZTogXCJERUxFVEVcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJwcm9qZWN0cy9cIiArIHBhcmFtcy5waWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIGRlbGV0ZSBhIHJlZmVyZW5jZSBpbiBTbHljYXRcbiAqIEBwYXJhbSBwYXJhbXM6IG9iamVjdHtcbiAqIHJpZDogcmVmZXJlbmNlIGlkIG9mIHJlZmVyZW5jZSB0aGF0IGlzIHRvIGJlIGRlbGV0ZWQgZnJvbSBTbHljYXRcbiAqIHN1Y2Nlc3MoKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gc3VjY2Vzc1xuICogZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gZXJyb3JcbiAqIH1cbiAqL1xubW9kdWxlLmRlbGV0ZV9yZWZlcmVuY2UgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIHR5cGU6IFwiREVMRVRFXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwicmVmZXJlbmNlcy9cIiArIHBhcmFtcy5yaWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIGRlbGV0ZSBhIHJlbW90ZSBzc2ggc2Vzc2lvbiBmcm9tIHRoZSBTbHljYXQgc2VydmVyXG4gKiBAcGFyYW0gcGFyYW1zOiBvYmplY3R7XG4gKiBzaWQ6IHNlc3Npb24gaWQgb2Ygb3BlbiBzZXNzaW9uIHRoYXQgaXMgdG8gYmUgZGVsZXRlZCBmcm9tIFNseWNhdFxuICogc3VjY2VzcygpOiBmdW5jdGlvbiBjYWxsZWQgdXBvbiBzdWNjZXNzXG4gKiBlcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpOiBmdW5jdGlvbiBjYWxsZWQgdXBvbiBlcnJvclxuICogfVxuICovXG5tb2R1bGUuZGVsZXRlX3JlbW90ZSA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgdHlwZTogXCJERUxFVEVcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJyZW1vdGVzL1wiICsgcGFyYW1zLnNpZCxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbigpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbi8qKlxuICogZGVsZXRlIGEgdGVtcCB1cGxvYWQgZmlsZSBmcm9tIHRoZSBzbHljYXQgc2VydmVyXG4gKiBnZW5lcmFsbHkgeW91IHdvdWxkIGNhbGwgdGhpcyBpZiB0aGVyZSB3YXMgYW4gZXJyb3IgaW4gdGhlIHVwbG9hZCBvclxuICogaWYgdGhlIGZpbGUgd2FzIHN1Y2Nlc3NmdWxseSB1cGxvYWRlZCBmb3IgY2xlYW51cCBwdXJwb3Nlcy4gbm90ZSB0aGF0XG4gKiBVcGxvYWRzIGFyZSBjb25zaWRlcmVkIHRlbXBvcmFyeSBhbmQgb25seSBzaG91bGQgYmUgdXNlZCBhcyBhIG1lYW4gdG9cbiAqIHRyYW5zcG9ydCBmaWxlcyB0byB0aGUgc2VydmVyXG4gKiBAcGFyYW0gcGFyYW1zOiBvYmplY3R7XG4gKiB1aWQ6IHVwbG9hZCBpZCBvZiB0aGUgcGFydGlhbCBvciBmdWxseSB1cGxvYWRlZCBmaWxlIHRvIGJlIGRlbGV0ZWQgZnJvbSBTbHljYXRcbiAqIHN1Y2Nlc3MoKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gc3VjY2Vzc1xuICogZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gZXJyb3JcbiAqIH1cbiAqL1xubW9kdWxlLmRlbGV0ZV91cGxvYWQgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIHR5cGU6IFwiREVMRVRFXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwidXBsb2Fkcy9cIiArIHBhcmFtcy51aWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqXG4gKiBAcGFyYW0gcGFyYW1zOiBvYmplY3R7XG4gKiBzdWNjZXNzKHJlc3VsdCk6IGZ1bmN0aW9uIGNhbGxlZCB1cG9uIHN1Y2Nlc3NcbiAqIGVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk6IGZ1bmN0aW9uIGNhbGxlZCB1cG9uIGVycm9yXG4gKiB9XG4gKi9cbm1vZHVsZS5nZXRfY29uZmlndXJhdGlvbl9tYXJraW5ncyA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwiY29uZmlndXJhdGlvbi9tYXJraW5nc1wiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmdldF9jb25maWd1cmF0aW9uX3BhcnNlcnMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcImNvbmZpZ3VyYXRpb24vcGFyc2Vyc1wiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmdldF9jb25maWd1cmF0aW9uX3N1cHBvcnRfZW1haWwgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcImNvbmZpZ3VyYXRpb24vc3VwcG9ydC1lbWFpbFwiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGVtYWlsKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhlbWFpbCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbm1vZHVsZS5nZXRfY29uZmlndXJhdGlvbl9pbmplY3RlZF9jb2RlID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJjb25maWd1cmF0aW9uL2luamVjdGVkLWNvZGVcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihpbmplY3RlZF9jb2RlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhpbmplY3RlZF9jb2RlKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmdldF9jb25maWd1cmF0aW9uX2dhX3RyYWNraW5nX2lkID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJjb25maWd1cmF0aW9uL2dhLXRyYWNraW5nLWlkXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oaWQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKGlkKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmdldF9jb25maWd1cmF0aW9uX3JlbW90ZV9ob3N0cyA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwiY29uZmlndXJhdGlvbi9yZW1vdGUtaG9zdHNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbm1vZHVsZS5nZXRfY29uZmlndXJhdGlvbl92ZXJzaW9uID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJjb25maWd1cmF0aW9uL3ZlcnNpb25cIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbm1vZHVsZS5nZXRfY29uZmlndXJhdGlvbl93aXphcmRzID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJjb25maWd1cmF0aW9uL3dpemFyZHNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbih3aXphcmRzKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2Vzcyh3aXphcmRzKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfY29uZmlndXJhdGlvbl9hZ2VudF9mdW5jdGlvbnMgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJjb25maWd1cmF0aW9uL2FnZW50LWZ1bmN0aW9uc1wiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGZucykge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhmbnMpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfbW9kZWwgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcIm1vZGVscy9cIiArIHBhcmFtcy5taWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X21vZGVsX2ZpbGUgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICB0eXBlOiAnR0VUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ21vZGVscy8nICsgcGFyYW1zLm1pZCArICcvZmlsZXMvJyArIHBhcmFtcy5haWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oY29udGVudCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2Vzcyhjb250ZW50KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X21vZGVsX2FycmF5c2V0X21ldGFkYXRhID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICB2YXIgc2VhcmNoID0ge307XG4gIGlmKHBhcmFtcy5hcnJheXMpXG4gICAgc2VhcmNoLmFycmF5cyA9IHBhcmFtcy5hcnJheXM7XG4gIGlmKHBhcmFtcy5zdGF0aXN0aWNzKVxuICAgIHNlYXJjaC5zdGF0aXN0aWNzID0gcGFyYW1zLnN0YXRpc3RpY3M7XG4gIGlmKHBhcmFtcy51bmlxdWUpXG4gICAgc2VhcmNoLnVuaXF1ZSA9IHBhcmFtcy51bmlxdWU7XG5cbiAgJC5hamF4KFxuICB7XG4gICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgdXJsOiBVUkkoYXBpX3Jvb3QgKyBcIm1vZGVscy9cIiArIHBhcmFtcy5taWQgKyBcIi9hcnJheXNldHMvXCIgKyBwYXJhbXMuYWlkICsgXCIvbWV0YWRhdGFcIikuc2VhcmNoKHNlYXJjaCkudG9TdHJpbmcoKSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X21vZGVsX2FycmF5c2V0X2RhdGEgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogVVJJKGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvYXJyYXlzZXRzL1wiICsgcGFyYW1zLmFpZCArIFwiL2RhdGFcIikuc2VhcmNoKHtcImh5cGVyY2h1bmtzXCI6cGFyYW1zLmh5cGVyY2h1bmtzfSkudG9TdHJpbmcoKSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X21vZGVsX2NvbW1hbmQgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogVVJJKGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvY29tbWFuZHMvXCIgKyBwYXJhbXMudHlwZSArIFwiL1wiICsgcGFyYW1zLmNvbW1hbmQpLnNlYXJjaChwYXJhbXMucGFyYW1ldGVycyB8fCB7fSkudG9TdHJpbmcoKSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59O1xuXG5tb2R1bGUucG9zdF9tb2RlbF9jb21tYW5kID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJQT1NUXCIsXG4gICAgdXJsOiBVUkkoYXBpX3Jvb3QgKyBcIm1vZGVscy9cIiArIHBhcmFtcy5taWQgKyBcIi9jb21tYW5kcy9cIiArIHBhcmFtcy50eXBlICsgXCIvXCIgKyBwYXJhbXMuY29tbWFuZCkuc2VhcmNoKHBhcmFtcy5wYXJhbWV0ZXJzIHx8IHt9KS50b1N0cmluZygpLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn07XG5cbm1vZHVsZS5wb3N0X3NlbnNpdGl2ZV9tb2RlbF9jb21tYW5kID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcIm1vZGVscy9cIiArIHBhcmFtcy5taWQgKyBcIi9zZW5zaXRpdmUvXCIgKyBwYXJhbXMudHlwZSArIFwiL1wiICsgcGFyYW1zLmNvbW1hbmQsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocGFyYW1zLnBhcmFtZXRlcnMgfHwge30pLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKSB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucHV0X21vZGVsX2NvbW1hbmQgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIlBVVFwiLFxuICAgIHVybDogVVJJKGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvY29tbWFuZHMvXCIgKyBwYXJhbXMudHlwZSArIFwiL1wiICsgcGFyYW1zLmNvbW1hbmQpLnNlYXJjaChwYXJhbXMucGFyYW1ldGVycyB8fCB7fSkudG9TdHJpbmcoKSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X21vZGVsX3BhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwibW9kZWxzL1wiICsgcGFyYW1zLm1pZCArIFwiL3BhcmFtZXRlcnMvXCIgKyBwYXJhbXMuYWlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmdldF9tb2RlbF90YWJsZV9tZXRhZGF0YSA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgY29uc29sZS5sb2coXCJzbHljYXQtd2ViLWNsaWVudC5nZXRfbW9kZWxfdGFibGVfbWV0YWRhdGEoKSBpcyBkZXByZWNhdGVkLCB1c2UgZ2V0X21vZGVsX2FycmF5c2V0X21ldGFkYXRhKCkgaW5zdGVhZC5cIik7XG5cbiAgdmFyIHVybCA9IGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvdGFibGVzL1wiICsgcGFyYW1zLmFpZCArIFwiL2FycmF5cy9cIiArIChwYXJhbXMuYXJyYXkgfHwgXCIwXCIpICsgXCIvbWV0YWRhdGFcIjtcbiAgaWYocGFyYW1zLmluZGV4KVxuICAgIHVybCArPSBcIj9pbmRleD1cIiArIHBhcmFtcy5pbmRleDtcblxuLy8gICAgLy9vdGhlciBzZWN0aW9uXG4vLyAgICB2YXIgbmV3X3VybCA9IGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvYXJyYXlzZXRzL1wiICsgcGFyYW1zLmFpZCArICBcIi9tZXRhZGF0YT9hcnJheXM9XCIgKyAocGFyYW1zLmFycmF5IHx8IFwiMFwiKSArIFwiJTNiMSZcIiArXCJzdGF0aXN0aWNzPTBcIjtcbi8vLy8gICAgaWYocGFyYW1zLmluZGV4KVxuLy8vLyAgICAgIG5ld191cmwgKz0gXCI/aW5kZXg9XCIgKyBwYXJhbXMuaW5kZXg7XG4vLyAgICAkLmFqYXgoXG4vLyAgICB7XG4vLyAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcbi8vICAgICAgdHlwZTogXCJHRVRcIixcbi8vICAgICAgdXJsOiBuZXdfdXJsLFxuLy8gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4vLyAgICAgIHtcbi8vICAgICAgICBpZihwYXJhbXMuc3VjY2Vzcylcbi8vICAgICAgICAgIGNvbnNvbGUubG9nKFwiXFxuTkVXOiAgXCIgKyBuZXdfdXJsICsgXCJcXG5cIiArIEpTT04uc3RyaW5naWZ5KHJlc3VsdCkgK1wiXFxuXCIpO1xuLy8gICAgICAgICAgLy9wYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuLy8gICAgICB9LFxuLy8gICAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuLy8gICAgICB7XG4vLyAgICAgICAgaWYocGFyYW1zLmVycm9yKVxuLy8gICAgICAgICAgY29uc29sZS5sb2coXCJcXG5ORVc6ICBcIiArIHVybCArIFwiXFxuXCIgKyByZXF1ZXN0ICsgcmVhc29uX3BocmFzZSArIHN0YXR1cyArXCJcXG5cIik7XG4vLyAgICAgICAgICAvL3BhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuLy8gICAgICB9LFxuLy8gICAgfSk7XG4vLyAgICAvL0VORCBvdGhlciBzZWN0aW9uXG5cblxuICAkLmFqYXgoXG4gIHtcbiAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IHVybCxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJcXG5PTEQ6ICBcIiArIHVybCArIFwiXFxuXCIgKyBKU09OLnN0cmluZ2lmeShyZXN1bHQpICtcIlxcblwiKTtcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLmdldF9wcm9qZWN0X3JlZmVyZW5jZXMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInByb2plY3RzL1wiICsgcGFyYW1zLnBpZCArIFwiL3JlZmVyZW5jZXNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZWZlcmVuY2VzKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZWZlcmVuY2VzKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufVxuXG5tb2R1bGUuZ2V0X3JlbW90ZXMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInJlbW90ZXMvXCIgKyBwYXJhbXMuaG9zdG5hbWUsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X3JlbW90ZV92aWRlb19zdGF0dXMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICB0eXBlOiBcIkdFVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInJlbW90ZXMvXCIgKyBwYXJhbXMuc2lkICsgXCIvdmlkZW9zL1wiICsgcGFyYW1zLnZzaWQgKyBcIi9zdGF0dXNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihtZXRhZGF0YSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MobWV0YWRhdGEpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5nZXRfdXNlciA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgdHlwZTogXCJHRVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJ1c2Vycy9cIiArIChwYXJhbXMudWlkIHx8IFwiLVwiKSxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbih1c2VyKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2Vzcyh1c2VyKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLnBvc3RfZXZlbnQgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcImV2ZW50cy9cIiArIHBhcmFtcy5wYXRoLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9LFxuICB9KTtcbn1cblxubW9kdWxlLnBvc3RfbW9kZWxfZmlsZXMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gIHZhciBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gIGRhdGEuYXBwZW5kKFwiaW5wdXRcIiwgcGFyYW1zLmlucHV0ID8gdHJ1ZTogZmFsc2UpO1xuICBkYXRhLmFwcGVuZChcInBhcnNlclwiLCBwYXJhbXMucGFyc2VyKTtcbiAgZGF0YS5hcHBlbmQoXCJhaWRzXCIsIHBhcmFtcy5haWRzKTtcbiAgaWYocGFyYW1zLnNpZHMgJiYgcGFyYW1zLnBhdGhzKVxuICB7XG4gICAgZGF0YS5hcHBlbmQoXCJzaWRzXCIsIHBhcmFtcy5zaWRzKTtcbiAgICBkYXRhLmFwcGVuZChcInBhdGhzXCIsIHBhcmFtcy5wYXRocyk7XG4gIH1cbiAgZWxzZSBpZihwYXJhbXMuZmlsZXMpXG4gIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpICE9IHBhcmFtcy5maWxlcy5sZW5ndGg7ICsraSlcbiAgICAgIGRhdGEuYXBwZW5kKFwiZmlsZXNcIiwgcGFyYW1zLmZpbGVzW2ldKTtcbiAgfVxuXG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBmYWxzZSxcbiAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgZGF0YTogZGF0YSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvZmlsZXNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbigpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbm1vZHVsZS5wb3N0X21vZGVsX2ZpbmlzaCA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgdHlwZTogXCJQT1NUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwibW9kZWxzL1wiICsgcGFyYW1zLm1pZCArIFwiL2ZpbmlzaFwiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnBvc3RfcHJvamVjdHMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShcbiAgICB7XG4gICAgICBcIm5hbWVcIjogcGFyYW1zLm5hbWUsXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IHBhcmFtcy5kZXNjcmlwdGlvbiB8fCBcIlwiLFxuICAgIH0pLFxuICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInByb2plY3RzXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQuaWQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucG9zdF9wcm9qZWN0X21vZGVscyA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KFxuICAgIHtcbiAgICAgIFwibW9kZWwtdHlwZVwiOiBwYXJhbXMudHlwZSxcbiAgICAgIFwibmFtZVwiOiBwYXJhbXMubmFtZSxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogcGFyYW1zLmRlc2NyaXB0aW9uIHx8IFwiXCIsXG4gICAgICBcIm1hcmtpbmdcIjogcGFyYW1zLm1hcmtpbmcgfHwgXCJcIixcbiAgICB9KSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJwcm9qZWN0cy9cIiArIHBhcmFtcy5waWQgKyBcIi9tb2RlbHNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdC5pZCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5wb3N0X3Byb2plY3RfcmVmZXJlbmNlcyA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgdmFyIGRhdGEgPSB7fTtcbiAgZGF0YS5uYW1lID0gcGFyYW1zLm5hbWU7XG4gIGlmKFwibW9kZWwtdHlwZVwiIGluIHBhcmFtcylcbiAgICBkYXRhW1wibW9kZWwtdHlwZVwiXSA9IHBhcmFtc1tcIm1vZGVsLXR5cGVcIl07XG4gIGlmKFwibWlkXCIgaW4gcGFyYW1zKVxuICAgIGRhdGEubWlkID0gcGFyYW1zLm1pZDtcbiAgaWYoXCJiaWRcIiBpbiBwYXJhbXMpXG4gICAgZGF0YS5iaWQgPSBwYXJhbXMuYmlkO1xuXG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJwcm9qZWN0cy9cIiArIHBhcmFtcy5waWQgKyBcIi9yZWZlcmVuY2VzXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQuaWQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIHB1dCBhIHJlZmVyZW5jZSBpbiBTbHljYXRcbiAqIEBwYXJhbSBwYXJhbXM6IG9iamVjdHtcbiAqIHJpZDogcmVmZXJlbmNlIGlkIG9mIHJlZmVyZW5jZSB0aGF0IGlzIHRvIGJlIHVwZGF0ZWRcbiAqIHN1Y2Nlc3MoKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gc3VjY2Vzc1xuICogZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTogZnVuY3Rpb24gY2FsbGVkIHVwb24gZXJyb3JcbiAqIH1cbiAqL1xubW9kdWxlLnB1dF9yZWZlcmVuY2UgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gIHZhciBkYXRhID0ge307XG4gIGlmKFwibmFtZVwiIGluIHBhcmFtcylcbiAgICBkYXRhW1wibmFtZVwiXSA9IHBhcmFtc1tcIm5hbWVcIl07XG4gIGlmKFwiYmlkXCIgaW4gcGFyYW1zKVxuICAgIGRhdGFbXCJiaWRcIl0gPSBwYXJhbXNbXCJiaWRcIl07XG5cbiAgJC5hamF4KFxuICB7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgIHR5cGU6IFwiUFVUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwicmVmZXJlbmNlcy9cIiArIHBhcmFtcy5yaWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucG9zdF9yZW1vdGVzID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoXG4gICAge1xuICAgICAgaG9zdG5hbWU6IHBhcmFtcy5ob3N0bmFtZSxcbiAgICAgIHVzZXJuYW1lOiBwYXJhbXMudXNlcm5hbWUsXG4gICAgICBwYXNzd29yZDogcGFyYW1zLnBhc3N3b3JkLFxuICAgICAgYWdlbnQ6IHBhcmFtcy5hZ2VudCAhPT0gdW5kZWZpbmVkID8gcGFyYW1zLmFnZW50IDogbnVsbFxuICAgIH0pLFxuICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInJlbW90ZXNcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpXG4gICAge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdC5zaWQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X3Nlc3Npb25fc3RhdHVzID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB0eXBlOiAnR0VUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ3JlbW90ZXMvJytwYXJhbXMuaG9zdG5hbWUrJy9zZXNzaW9uLXN0YXR1cycsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICBpZiAocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKHJlc3VsdCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKSB7XG4gICAgICBpZiAocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnBvc3RfcmVtb3RlX2xhdW5jaCA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICAkLmFqYXgoe1xuICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgY29tbWFuZDogcGFyYW1zLmNvbW1hbmRcbiAgICB9KSxcbiAgICB0eXBlOiAnUE9TVCcsXG4gICAgdXJsOiBhcGlfcm9vdCArICdyZW1vdGVzLycrcGFyYW1zLmhvc3RuYW1lKycvbGF1bmNoJyxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGlmIChwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucG9zdF9zdWJtaXRfYmF0Y2ggPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGZpbGVuYW1lOiBwYXJhbXMuZmlsZW5hbWVcbiAgICB9KSxcbiAgICB0eXBlOiAnUE9TVCcsXG4gICAgdXJsOiBhcGlfcm9vdCArICdyZW1vdGVzLycrcGFyYW1zLmhvc3RuYW1lKydzdWJtaXQtYmF0Y2gnLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfY2hlY2tqb2IgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIHR5cGU6ICdHRVQnLFxuICAgIHVybDogYXBpX3Jvb3QgKyAncmVtb3Rlcy9jaGVja2pvYi8nK3BhcmFtcy5ob3N0bmFtZStcIi9cIitwYXJhbXMuamlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5kZWxldGVfam9iID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB0eXBlOiAnREVMRVRFJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ3JlbW90ZXMvZGVsZXRlLWpvYi8nK3BhcmFtcy5ob3N0bmFtZSsnLycrcGFyYW1zLmppZCxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGlmIChwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X2pvYl9vdXRwdXQgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIHR5cGU6ICdHRVQnLFxuICAgIHVybDogYXBpX3Jvb3QgKyAncmVtb3Rlcy9nZXQtam9iLW91dHB1dC8nK3BhcmFtcy5ob3N0bmFtZStcIi9cIitwYXJhbXMuamlkK1wiL3BhdGhcIitwYXJhbXMucGF0aCxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGlmIChwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X3VzZXJfY29uZmlnID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB0eXBlOiAnR0VUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ3JlbW90ZXMvJytwYXJhbXMuaG9zdG5hbWUrJy9nZXQtdXNlci1jb25maWcnLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5zZXRfdXNlcl9jb25maWcgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGNvbmZpZzogcGFyYW1zLmNvbmZpZ1xuICAgIH0pLFxuICAgIHR5cGU6ICdQT1NUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ3JlbW90ZXMvJytwYXJhbXMuaG9zdG5hbWUrJy9zZXQtdXNlci1jb25maWcnLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5wb3N0X2FnZW50X2Z1bmN0aW9uID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICB3Y2tleTogcGFyYW1zLndja2V5LFxuICAgICAgbm5vZGVzOiBwYXJhbXMubm5vZGVzLFxuICAgICAgcGFydGl0aW9uOiBwYXJhbXMucGFydGl0aW9uLFxuICAgICAgbnRhc2tzX3Blcl9ub2RlOiBwYXJhbXMubnRhc2tzX3Blcl9ub2RlLFxuICAgICAgbnRhc2tzOiBwYXJhbXMubnRhc2tzLFxuICAgICAgbmNwdV9wZXJfdGFzazogcGFyYW1zLm5jcHVfcGVyX3Rhc2ssXG4gICAgICB0aW1lX2hvdXJzOiBwYXJhbXMudGltZV9ob3VycyxcbiAgICAgIHRpbWVfbWludXRlczogcGFyYW1zLnRpbWVfbWludXRlcyxcbiAgICAgIHRpbWVfc2Vjb25kczogcGFyYW1zLnRpbWVfc2Vjb25kcyxcbiAgICAgIGZuOiBwYXJhbXMuZm4sXG4gICAgICBmbl9wYXJhbXM6IHBhcmFtcy5mbl9wYXJhbXMsXG4gICAgICB1aWQ6IHBhcmFtcy51aWRcbiAgICB9KSxcbiAgICB0eXBlOiAnUE9TVCcsXG4gICAgdXJsOiBhcGlfcm9vdCArICdyZW1vdGVzLycrcGFyYW1zLmhvc3RuYW1lKycvcnVuLWFnZW50LWZ1bmN0aW9uJyxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXNwb25zZSk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKSB7XG4gICAgICBpZiAocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxuXG5tb2R1bGUucG9zdF9yZW1vdGVfYnJvd3NlID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoXG4gICAge1xuICAgIH0pLFxuICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInJlbW90ZXMvXCIgKyBwYXJhbXMuaG9zdG5hbWUgKyBcIi9icm93c2VcIiArIHBhcmFtcy5wYXRoLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnBvc3RfdXBsb2FkcyA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KFxuICAgIHtcbiAgICAgIFwibWlkXCI6IHBhcmFtcy5taWQsXG4gICAgICBcImlucHV0XCI6IHBhcmFtcy5pbnB1dCxcbiAgICAgIFwicGFyc2VyXCI6IHBhcmFtcy5wYXJzZXIsXG4gICAgICBcImFpZHNcIjogcGFyYW1zLmFpZHNcbiAgICB9KSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJ1cGxvYWRzXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQuaWQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucG9zdF9sb2cgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShcbiAgICB7XG4gICAgICBcIm1lc3NhZ2VcIjogcGFyYW1zLm1lc3NhZ2VcbiAgICB9KSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJsb2dcIixcbiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnBvc3RfdXBsb2FkX2ZpbmlzaGVkID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoXG4gICAge1xuICAgICAgXCJ1cGxvYWRlZFwiOiBwYXJhbXMudXBsb2FkZWRcbiAgICB9KSxcbiAgICB0eXBlOiBcIlBPU1RcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJ1cGxvYWRzL1wiICsgcGFyYW1zLnVpZCArIFwiL2ZpbmlzaGVkXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgaWYocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHBhcmFtcy5zdWNjZXNzKCk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24ocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5wdXRfbW9kZWxfaW5wdXRzID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoXG4gICAge1xuICAgICAgc2lkOiBwYXJhbXMuc2lkLFxuICAgICAgXCJkZWVwLWNvcHlcIjogcGFyYW1zW1wiZGVlcC1jb3B5XCJdIHx8IGZhbHNlXG4gICAgfSksXG4gICAgdHlwZTogXCJQVVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkICsgXCIvaW5wdXRzXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUucHV0X21vZGVsX3BhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KFxuICAgIHtcbiAgICAgIHZhbHVlOiBwYXJhbXMudmFsdWUsXG4gICAgICBpbnB1dDogcGFyYW1zLmlucHV0ID09PSB1bmRlZmluZWQgPyB0cnVlOiBwYXJhbXMuaW5wdXQgPyB0cnVlOiBmYWxzZVxuICAgIH0pLFxuICAgIHR5cGU6IFwiUFVUXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwibW9kZWxzL1wiICsgcGFyYW1zLm1pZCArIFwiL3BhcmFtZXRlcnMvXCIgKyBwYXJhbXMuYWlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnB1dF9wcm9qZWN0ID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICB2YXIgcHJvamVjdCA9IHt9O1xuICBpZihcIm5hbWVcIiBpbiBwYXJhbXMpXG4gICAgcHJvamVjdC5uYW1lID0gcGFyYW1zLm5hbWU7XG4gIGlmKFwiZGVzY3JpcHRpb25cIiBpbiBwYXJhbXMpXG4gICAgcHJvamVjdC5kZXNjcmlwdGlvbiA9IHBhcmFtcy5kZXNjcmlwdGlvbjtcbiAgaWYoXCJhY2xcIiBpbiBwYXJhbXMpXG4gICAgcHJvamVjdC5hY2wgPSBwYXJhbXMuYWNsO1xuXG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShwcm9qZWN0KSxcbiAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgdHlwZTogXCJQVVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJwcm9qZWN0cy9cIiArIHBhcmFtcy5waWQsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZGVsZXRlX3Byb2plY3RfY2FjaGUgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheChcbiAge1xuICAgIHR5cGU6IFwiREVMRVRFXCIsXG4gICAgdXJsOiBhcGlfcm9vdCArIFwicHJvamVjdHMvXCIgKyBwYXJhbXMucGlkICsgXCIvZGVsZXRlLWNhY2hlXCIsXG4gICAgc3VjY2VzczogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIGlmKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcygpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSlcbiAgICB7XG4gICAgICBpZihwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIGRlbGV0ZSBtb2RlbCBhcnRpZmFjdHMgZnJvbSB0aGUgbm9zcWwgZGF0YWJhc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIHtcbiAqICBtaWQ6bW9kZWxfaWQsXG4gKiAgYWlkOmFydGlmYWN0X2lkLFxuICogIHN1Y2Nlc3M6ZnVuYyhjYWxsZWQgb24gYWpheCBzdWNjZXNzKSxcbiAqICBlcnJvcjpmdW5jKGNhbGxlZCBvbiBhamF4IGVycm9yKVxuICogfVxuICovXG5tb2R1bGUuZGVsZXRlX21vZGVsX3BhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgJC5hamF4KFxuICB7XG4gICAgdHlwZTogXCJERUxFVEVcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJkZWxldGUtYXJ0aWZhY3QvXCIgKyBwYXJhbXMubWlkICsgXCIvXCIgKyBwYXJhbXMuYWlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnB1dF9tb2RlbCA9IGZ1bmN0aW9uKHBhcmFtcylcbntcbiAgdmFyIG1vZGVsID0ge307XG4gIGlmKFwibmFtZVwiIGluIHBhcmFtcylcbiAgICBtb2RlbC5uYW1lID0gcGFyYW1zLm5hbWU7XG4gIGlmKFwiZGVzY3JpcHRpb25cIiBpbiBwYXJhbXMpXG4gICAgbW9kZWwuZGVzY3JpcHRpb24gPSBwYXJhbXMuZGVzY3JpcHRpb247XG4gIGlmKFwibWFya2luZ1wiIGluIHBhcmFtcylcbiAgICBtb2RlbC5tYXJraW5nID0gcGFyYW1zLm1hcmtpbmc7XG4gIGlmKFwic3RhdGVcIiBpbiBwYXJhbXMpXG4gICAgbW9kZWwuc3RhdGUgPSBwYXJhbXMuc3RhdGU7XG5cbiAgJC5hamF4KFxuICB7XG4gICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KG1vZGVsKSxcbiAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgdHlwZTogXCJQVVRcIixcbiAgICB1cmw6IGFwaV9yb290ICsgXCJtb2RlbHMvXCIgKyBwYXJhbXMubWlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnB1dF91cGxvYWRfZmlsZV9wYXJ0ID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuXG4gIHZhciBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gIGlmKHBhcmFtcy5ob3N0bmFtZSAmJiBwYXJhbXMucGF0aClcbiAge1xuLy8gICAgICBjb25zb2xlLmxvZyhcImlmPyBzaWQgXCIrcGFyYW1zLnNpZCtcInBhdGggXCIrcGFyYW1zLnBhdGgrXCJmaWxlIFwiK3BhcmFtcy5maWxlKTtcbiAgICBkYXRhLmFwcGVuZChcImhvc3RuYW1lXCIsIHBhcmFtcy5ob3N0bmFtZSk7XG4gICAgZGF0YS5hcHBlbmQoXCJwYXRoXCIsIHBhcmFtcy5wYXRoKTtcbiAgfVxuICBlbHNlIGlmKHBhcmFtcy5maWxlKVxuICB7XG4vLyAgICAgIGNvbnNvbGUubG9nKFwiaWYgZWxzZT8gc2lkIFwiK3BhcmFtcy5zaWQrXCJwYXRoIFwiK3BhcmFtcy5wYXRoK1wiZmlsZSBcIitwYXJhbXMuZmlsZSk7XG4gICAgZGF0YS5hcHBlbmQoXCJmaWxlXCIsIHBhcmFtcy5maWxlKTtcbiAgfVxuXG4gICQuYWpheChcbiAge1xuICAgIGNvbnRlbnRUeXBlOiBmYWxzZSxcbiAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgZGF0YTogZGF0YSxcbiAgICB0eXBlOiBcIlBVVFwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcInVwbG9hZHMvXCIgKyBwYXJhbXMudWlkICsgXCIvZmlsZXMvXCIgKyBwYXJhbXMuZmlkICsgXCIvcGFydHMvXCIgKyBwYXJhbXMucGlkLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLnNpZ25fb3V0ID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoXG4gIHtcbiAgICB0eXBlOiBcIkRFTEVURVwiLFxuICAgIHVybDogYXBpX3Jvb3QgKyBcImxvZ291dFwiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICBpZihwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MoKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpXG4gICAge1xuICAgICAgaWYocGFyYW1zLmVycm9yKVxuICAgICAgICBwYXJhbXMuZXJyb3IocmVxdWVzdCwgc3RhdHVzLCByZWFzb25fcGhyYXNlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmpvYl90aW1lID0gZnVuY3Rpb24ocGFyYW1zKVxue1xuICAkLmFqYXgoe1xuICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgdHlwZTogJ0dFVCcsXG4gICAgdXJsOiBhcGlfcm9vdCArICdyZW1vdGVzLycrcGFyYW1zLm5vZGVzK1wiL1wiK3BhcmFtcy50YXNrcytcIi9cIitwYXJhbXMuc2l6ZStcIi9qb2ItdGltZVwiLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfdGltZV9zZXJpZXNfbmFtZXMgPSBmdW5jdGlvbihwYXJhbXMpXG57XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB0eXBlOiAnR0VUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgXCJyZW1vdGVzL1wiICsgcGFyYW1zLmhvc3RuYW1lICsgXCIvdGltZV9zZXJpZXNfbmFtZXMvZmlsZVwiICsgcGFyYW1zLnBhdGgsXG4gICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAvL2NvbnNvbGUubG9nKFwicmVzdWx0IFwiK0pTT04uc3RyaW5naWZ5KHJlc3VsdCkpXG4gICAgICBpZiAocGFyYW1zLnN1Y2Nlc3MpXG4gICAgICAgIHJldHVybiBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfcHJvamVjdCA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICAkLmFqYXgoe1xuICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgdHlwZTogJ0dFVCcsXG4gICAgdXJsOiBhcGlfcm9vdCArICdwcm9qZWN0cy8nICsgcGFyYW1zLnBpZCxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGlmIChwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZ2V0X3Byb2plY3RzID0gZnVuY3Rpb24ocGFyYW1zKSB7XG4gICQuYWpheCh7XG4gICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB0eXBlOiAnR0VUJyxcbiAgICB1cmw6IGFwaV9yb290ICsgJ3Byb2plY3RzX2xpc3QnLFxuICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgaWYgKHBhcmFtcy5zdWNjZXNzKVxuICAgICAgICBwYXJhbXMuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSkge1xuICAgICAgaWYgKHBhcmFtcy5lcnJvcilcbiAgICAgICAgcGFyYW1zLmVycm9yKHJlcXVlc3QsIHN0YXR1cywgcmVhc29uX3BocmFzZSk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5nZXRfcHJvamVjdF9tb2RlbHMgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgJC5hamF4KHtcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIHR5cGU6ICdHRVQnLFxuICAgIHVybDogYXBpX3Jvb3QgKyAncHJvamVjdHMvJysgcGFyYW1zLnBpZCArICcvbW9kZWxzJyxcbiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGlmIChwYXJhbXMuc3VjY2VzcylcbiAgICAgICAgcGFyYW1zLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpIHtcbiAgICAgIGlmIChwYXJhbXMuZXJyb3IpXG4gICAgICAgIHBhcmFtcy5lcnJvcihyZXF1ZXN0LCBzdGF0dXMsIHJlYXNvbl9waHJhc2UpO1xuICAgIH1cbiAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgbW9kdWxlOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./web-server/js/slycat-web-client-webpack.js\n");

/***/ })

}]);