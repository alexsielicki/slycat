(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["slycat_page~slycat_project~slycat_projects~ui_cca~ui_parameter_image~ui_parameter_plus~ui_run_comman~247387c4"],{

/***/ "./web-server/js/slycat-server-root.js":
/*!*********************************************!*\
  !*** ./web-server/js/slycat-server-root.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\n retains certain rights in this software. */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return $(\"#slycat-server-root\").attr(\"href\");\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./web-server/js/slycat-server-root.js?");

/***/ }),

/***/ "./web-server/js/slycat-web-client-webpack.js":
/*!****************************************************!*\
  !*** ./web-server/js/slycat-web-client-webpack.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\n retains certain rights in this software. */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./slycat-server-root */ \"./web-server/js/slycat-server-root.js\"), __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(/*! urijs */ \"./node_modules/urijs/src/URI.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (server_root, $, URI) {\n  var module = {};\n\n  /**\n   * delete a model for a Slycat project\n   * @param params: object{\n   * mid: model id that is to be deleted from the Slycat project\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.delete_model = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"models/\" + params.mid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * delete a project in Slycat\n   * @param params: object{\n   * pid: project id of project that is to be deleted from the Slycat\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.delete_project = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"projects/\" + params.pid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * delete a reference in Slycat\n   * @param params: object{\n   * rid: reference id of reference that is to be deleted from Slycat\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.delete_reference = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"references/\" + params.rid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * delete a remote ssh session from the Slycat server\n   * @param params: object{\n   * sid: session id of open session that is to be deleted from Slycat\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.delete_remote = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"remotes/\" + params.sid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * delete a temp upload file from the slycat server\n   * generally you would call this if there was an error in the upload or\n   * if the file was successfully uploaded for cleanup purposes. note that\n   * Uploads are considered temporary and only should be used as a mean to\n   * transport files to the server\n   * @param params: object{\n   * uid: upload id of the partial or fully uploaded file to be deleted from Slycat\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.delete_upload = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"uploads/\" + params.uid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   *\n   * @param params: object{\n   * success(result): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.get_configuration_markings = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/markings\",\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_parsers = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/parsers\",\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_support_email = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/support-email\",\n      success: function success(email) {\n        if (params.success) params.success(email);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_remote_hosts = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/remote-hosts\",\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_version = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/version\",\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_wizards = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/wizards\",\n      success: function success(wizards) {\n        if (params.success) params.success(wizards);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_configuration_agent_functions = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"configuration/agent-functions\",\n      success: function success(fns) {\n        if (params.success) params.success(fns);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"models/\" + params.mid,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_file = function (params) {\n    $.ajax({\n      type: 'GET',\n      url: server_root + 'models/' + params.mid + '/files/' + params.aid,\n      success: function success(content) {\n        if (params.success) params.success(content);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_arrayset_metadata = function (params) {\n    var search = {};\n    if (params.arrays) search.arrays = params.arrays;\n    if (params.statistics) search.statistics = params.statistics;\n    if (params.unique) search.unique = params.unique;\n\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: URI(server_root + \"models/\" + params.mid + \"/arraysets/\" + params.aid + \"/metadata\").search(search).toString(),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_arrayset_data = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: URI(server_root + \"models/\" + params.mid + \"/arraysets/\" + params.aid + \"/data\").search({ \"hyperchunks\": params.hyperchunks }).toString(),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_command = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: URI(server_root + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_model_command = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"POST\",\n      url: URI(server_root + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_sensitive_model_command = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      type: \"POST\",\n      url: server_root + \"models/\" + params.mid + \"/sensitive/\" + params.type + \"/\" + params.command,\n      data: JSON.stringify(params.parameters || {}),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_model_command = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"PUT\",\n      url: URI(server_root + \"models/\" + params.mid + \"/commands/\" + params.type + \"/\" + params.command).search(params.parameters || {}).toString(),\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_parameter = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"models/\" + params.mid + \"/parameters/\" + params.aid,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_model_table_metadata = function (params) {\n    console.log(\"slycat-web-client.get_model_table_metadata() is deprecated, use get_model_arrayset_metadata() instead.\");\n\n    var url = server_root + \"models/\" + params.mid + \"/tables/\" + params.aid + \"/arrays/\" + (params.array || \"0\") + \"/metadata\";\n    if (params.index) url += \"?index=\" + params.index;\n\n    //    //other section\n    //    var new_url = server_root + \"models/\" + params.mid + \"/arraysets/\" + params.aid +  \"/metadata?arrays=\" + (params.array || \"0\") + \"%3b1&\" +\"statistics=0\";\n    ////    if(params.index)\n    ////      new_url += \"?index=\" + params.index;\n    //    $.ajax(\n    //    {\n    //      dataType: \"json\",\n    //      type: \"GET\",\n    //      url: new_url,\n    //      success: function(result)\n    //      {\n    //        if(params.success)\n    //          console.log(\"\\nNEW:  \" + new_url + \"\\n\" + JSON.stringify(result) +\"\\n\");\n    //          //params.success(result);\n    //      },\n    //      error: function(request, status, reason_phrase)\n    //      {\n    //        if(params.error)\n    //          console.log(\"\\nNEW:  \" + url + \"\\n\" + request + reason_phrase + status +\"\\n\");\n    //          //params.error(request, status, reason_phrase);\n    //      },\n    //    });\n    //    //END other section\n\n\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: url,\n      success: function success(result) {\n        if (params.success)\n          //console.log(\"\\nOLD:  \" + url + \"\\n\" + JSON.stringify(result) +\"\\n\");\n          params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_project_references = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"projects/\" + params.pid + \"/references\",\n      success: function success(references) {\n        if (params.success) params.success(references);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_remotes = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"remotes/\" + params.hostname,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_remote_video_status = function (params) {\n    $.ajax({\n      dataType: \"json\",\n      type: \"GET\",\n      url: server_root + \"remotes/\" + params.sid + \"/videos/\" + params.vsid + \"/status\",\n      success: function success(metadata) {\n        if (params.success) params.success(metadata);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_user = function (params) {\n    $.ajax({\n      type: \"GET\",\n      url: server_root + \"users/\" + (params.uid || \"-\"),\n      success: function success(user) {\n        if (params.success) params.success(user);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_event = function (params) {\n    $.ajax({\n      type: \"POST\",\n      url: server_root + \"events/\" + params.path,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_model_files = function (params) {\n    var data = new FormData();\n    data.append(\"input\", params.input ? true : false);\n    data.append(\"parser\", params.parser);\n    data.append(\"aids\", params.aids);\n    if (params.sids && params.paths) {\n      data.append(\"sids\", params.sids);\n      data.append(\"paths\", params.paths);\n    } else if (params.files) {\n      for (var i = 0; i != params.files.length; ++i) {\n        data.append(\"files\", params.files[i]);\n      }\n    }\n\n    $.ajax({\n      contentType: false,\n      processData: false,\n      data: data,\n      type: \"POST\",\n      url: server_root + \"models/\" + params.mid + \"/files\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_model_finish = function (params) {\n    $.ajax({\n      type: \"POST\",\n      url: server_root + \"models/\" + params.mid + \"/finish\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_projects = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        \"name\": params.name,\n        \"description\": params.description || \"\"\n      }),\n      type: \"POST\",\n      url: server_root + \"projects\",\n      success: function success(result) {\n        if (params.success) params.success(result.id);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_project_models = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        \"model-type\": params.type,\n        \"name\": params.name,\n        \"description\": params.description || \"\",\n        \"marking\": params.marking || \"\"\n      }),\n      type: \"POST\",\n      url: server_root + \"projects/\" + params.pid + \"/models\",\n      success: function success(result) {\n        if (params.success) params.success(result.id);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_project_references = function (params) {\n    var data = {};\n    data.name = params.name;\n    if (\"model-type\" in params) data[\"model-type\"] = params[\"model-type\"];\n    if (\"mid\" in params) data.mid = params.mid;\n    if (\"bid\" in params) data.bid = params.bid;\n\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify(data),\n      type: \"POST\",\n      url: server_root + \"projects/\" + params.pid + \"/references\",\n      success: function success(result) {\n        if (params.success) params.success(result.id);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * put a reference in Slycat\n   * @param params: object{\n   * rid: reference id of reference that is to be updated\n   * success(): function called upon success\n   * error(request, status, reason_phrase): function called upon error\n   * }\n   */\n  module.put_reference = function (params) {\n    var data = {};\n    if (\"name\" in params) data[\"name\"] = params[\"name\"];\n    if (\"bid\" in params) data[\"bid\"] = params[\"bid\"];\n\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify(data),\n      type: \"PUT\",\n      url: server_root + \"references/\" + params.rid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_remotes = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        hostname: params.hostname,\n        username: params.username,\n        password: params.password,\n        agent: params.agent !== undefined ? params.agent : null\n      }),\n      type: \"POST\",\n      url: server_root + \"remotes\",\n      success: function success(result) {\n        if (params.success) params.success(result.sid);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_session_status = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'remotes/' + params.hostname + '/session-status',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_remote_launch = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      data: JSON.stringify({\n        command: params.command\n      }),\n      type: 'POST',\n      url: server_root + 'remotes/' + params.hostname + '/launch',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_submit_batch = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      data: JSON.stringify({\n        filename: params.filename\n      }),\n      type: 'POST',\n      url: server_root + 'remotes/' + params.hostname + 'submit-batch',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_checkjob = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'remotes/checkjob/' + params.hostname + \"/\" + params.jid,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.delete_job = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'DELETE',\n      url: server_root + 'remotes/delete-job/' + params.hostname + '/' + params.jid,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_job_output = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'remotes/get-job-output/' + params.hostname + \"/\" + params.jid + \"/path\" + params.path,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_user_config = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'remotes/' + params.hostname + '/get-user-config',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.set_user_config = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      data: JSON.stringify({\n        config: params.config\n      }),\n      type: 'POST',\n      url: server_root + 'remotes/' + params.hostname + '/set-user-config',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_agent_function = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      data: JSON.stringify({\n        wckey: params.wckey,\n        nnodes: params.nnodes,\n        partition: params.partition,\n        ntasks_per_node: params.ntasks_per_node,\n        ntasks: params.ntasks,\n        ncpu_per_task: params.ncpu_per_task,\n        time_hours: params.time_hours,\n        time_minutes: params.time_minutes,\n        time_seconds: params.time_seconds,\n        fn: params.fn,\n        fn_params: params.fn_params,\n        uid: params.uid\n      }),\n      type: 'POST',\n      url: server_root + 'remotes/' + params.hostname + '/run-agent-function',\n      success: function success(response) {\n        if (params.success) params.success(response);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_remote_browse = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({}),\n      type: \"POST\",\n      url: server_root + \"remotes/\" + params.hostname + \"/browse\" + params.path,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_uploads = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        \"mid\": params.mid,\n        \"input\": params.input,\n        \"parser\": params.parser,\n        \"aids\": params.aids\n      }),\n      type: \"POST\",\n      url: server_root + \"uploads\",\n      success: function success(result) {\n        if (params.success) params.success(result.id);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_log = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        \"message\": params.message\n      }),\n      type: \"POST\",\n      url: server_root + \"log\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.post_upload_finished = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        \"uploaded\": params.uploaded\n      }),\n      type: \"POST\",\n      url: server_root + \"uploads/\" + params.uid + \"/finished\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_model_inputs = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        sid: params.sid,\n        \"deep-copy\": params[\"deep-copy\"] || false\n      }),\n      type: \"PUT\",\n      url: server_root + \"models/\" + params.mid + \"/inputs\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_model_parameter = function (params) {\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        value: params.value,\n        input: params.input === undefined ? true : params.input ? true : false\n      }),\n      type: \"PUT\",\n      url: server_root + \"models/\" + params.mid + \"/parameters/\" + params.aid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_project = function (params) {\n    var project = {};\n    if (\"name\" in params) project.name = params.name;\n    if (\"description\" in params) project.description = params.description;\n    if (\"acl\" in params) project.acl = params.acl;\n\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify(project),\n      processData: false,\n      type: \"PUT\",\n      url: server_root + \"projects/\" + params.pid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.delete_project_cache = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"projects/\" + params.pid + \"/delete-cache\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  /**\n   * delete model artifacts from the nosql database\n   * @param params\n   * {\n   *  mid:model_id,\n   *  aid:artifact_id,\n   *  success:func(called on ajax success),\n   *  error:func(called on ajax error)\n   * }\n   */\n  module.delete_model_parameter = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"delete-artifact/\" + params.mid + \"/\" + params.aid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_model = function (params) {\n    var model = {};\n    if (\"name\" in params) model.name = params.name;\n    if (\"description\" in params) model.description = params.description;\n    if (\"marking\" in params) model.marking = params.marking;\n    if (\"state\" in params) model.state = params.state;\n\n    $.ajax({\n      contentType: \"application/json\",\n      data: JSON.stringify(model),\n      processData: false,\n      type: \"PUT\",\n      url: server_root + \"models/\" + params.mid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.put_upload_file_part = function (params) {\n\n    var data = new FormData();\n    if (params.hostname && params.path) {\n      //      console.log(\"if? sid \"+params.sid+\"path \"+params.path+\"file \"+params.file);\n      data.append(\"hostname\", params.hostname);\n      data.append(\"path\", params.path);\n    } else if (params.file) {\n      //      console.log(\"if else? sid \"+params.sid+\"path \"+params.path+\"file \"+params.file);\n      data.append(\"file\", params.file);\n    }\n\n    $.ajax({\n      contentType: false,\n      processData: false,\n      data: data,\n      type: \"PUT\",\n      url: server_root + \"uploads/\" + params.uid + \"/files/\" + params.fid + \"/parts/\" + params.pid,\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.sign_out = function (params) {\n    $.ajax({\n      type: \"DELETE\",\n      url: server_root + \"logout\",\n      success: function success() {\n        if (params.success) params.success();\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.job_time = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'remotes/' + params.nodes + \"/\" + params.tasks + \"/\" + params.size + \"/job-time\",\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_time_series_names = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + \"remotes/\" + params.hostname + \"/time_series_names/file\" + params.path,\n      success: function success(result) {\n        //console.log(\"result \"+JSON.stringify(result))\n        if (params.success) return params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_project = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'projects/' + params.pid,\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_projects = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'projects_list',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n\n  module.get_project_models = function (params) {\n    $.ajax({\n      contentType: 'application/json',\n      type: 'GET',\n      url: server_root + 'projects/' + params.pid + '/models',\n      success: function success(result) {\n        if (params.success) params.success(result);\n      },\n      error: function error(request, status, reason_phrase) {\n        if (params.error) params.error(request, status, reason_phrase);\n      }\n    });\n  };\n  return module;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./web-server/js/slycat-web-client-webpack.js?");

/***/ })

}]);