(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["ui_cca~ui_parameter_plus"],{

/***/ "./node_modules/css-loader/index.js!./web-server/css/slycat-additions.css":
/*!***********************************************************************!*\
  !*** ./node_modules/css-loader!./web-server/css/slycat-additions.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract\\n DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government\\n retains certain rights in this software. */\\n\\n.vertical {\\n  -ms-transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  transform: rotate(-90deg);\\n}\\n\\n.unvertical {\\n  -ms-transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n\\n.light-border-right {\\n  border-right: 2px solid rgb(231, 231, 231);\\n}\\n\\n.affix-top-right {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n}\\n\\n.fill-parent-height {\\n  height: 100%;\\n}\\n\\n.fill-parent-width {\\n  width: 100%;\\n}\\n\\n.link-cursor {\\n  cursor: pointer;\\n}\\n\\n.default-cursor {\\n  cursor: inherit;\\n}\\n\\n.info-panel {\\n  border-left: 2px solid #1b809e !important;\\n}\\n\\n.vertical-toggle-pane-resizer {\\n  right-border: 2px solid rgb(231,231,231);\\n}\\n\\n.fill-parent-height {\\n  height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWItc2VydmVyL2Nzcy9zbHljYXQtYWRkaXRpb25zLmNzcz9hOTAyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0Esa1RBQW1ULGtDQUFrQyxzQ0FBc0MsOEJBQThCLEdBQUcsaUJBQWlCLGlDQUFpQyxxQ0FBcUMsNkJBQTZCLEdBQUcseUJBQXlCLCtDQUErQyxHQUFHLHNCQUFzQix1QkFBdUIsYUFBYSxlQUFlLEdBQUcseUJBQXlCLGlCQUFpQixHQUFHLHdCQUF3QixnQkFBZ0IsR0FBRyxrQkFBa0Isb0JBQW9CLEdBQUcscUJBQXFCLG9CQUFvQixHQUFHLGlCQUFpQiw4Q0FBOEMsR0FBRyxtQ0FBbUMsNkNBQTZDLEdBQUcseUJBQXlCLGlCQUFpQixHQUFHOztBQUV6aEMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3dlYi1zZXJ2ZXIvY3NzL3NseWNhdC1hZGRpdGlvbnMuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiBDb3B5cmlnaHQgKGMpIDIwMTMsIDIwMTggTmF0aW9uYWwgVGVjaG5vbG9neSBhbmQgRW5naW5lZXJpbmcgU29sdXRpb25zIG9mIFNhbmRpYSwgTExDIC4gVW5kZXIgdGhlIHRlcm1zIG9mIENvbnRyYWN0XFxuIERFLU5BMDAwMzUyNSB3aXRoIE5hdGlvbmFsIFRlY2hub2xvZ3kgYW5kIEVuZ2luZWVyaW5nIFNvbHV0aW9ucyBvZiBTYW5kaWEsIExMQywgdGhlIFUuUy4gR292ZXJubWVudFxcbiByZXRhaW5zIGNlcnRhaW4gcmlnaHRzIGluIHRoaXMgc29mdHdhcmUuICovXFxuXFxuLnZlcnRpY2FsIHtcXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcXG59XFxuXFxuLnVudmVydGljYWwge1xcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xcbn1cXG5cXG4ubGlnaHQtYm9yZGVyLXJpZ2h0IHtcXG4gIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIHJnYigyMzEsIDIzMSwgMjMxKTtcXG59XFxuXFxuLmFmZml4LXRvcC1yaWdodCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDBweDtcXG4gIHJpZ2h0OiAwcHg7XFxufVxcblxcbi5maWxsLXBhcmVudC1oZWlnaHQge1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4uZmlsbC1wYXJlbnQtd2lkdGgge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5saW5rLWN1cnNvciB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5kZWZhdWx0LWN1cnNvciB7XFxuICBjdXJzb3I6IGluaGVyaXQ7XFxufVxcblxcbi5pbmZvLXBhbmVsIHtcXG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzFiODA5ZSAhaW1wb3J0YW50O1xcbn1cXG5cXG4udmVydGljYWwtdG9nZ2xlLXBhbmUtcmVzaXplciB7XFxuICByaWdodC1ib3JkZXI6IDJweCBzb2xpZCByZ2IoMjMxLDIzMSwyMzEpO1xcbn1cXG5cXG4uZmlsbC1wYXJlbnQtaGVpZ2h0IHtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js!./web-server/css/slycat-additions.css\n");

/***/ }),

/***/ "./web-server/css/slycat-additions.css":
/*!*********************************************!*\
  !*** ./web-server/css/slycat-additions.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!./slycat-additions.css */ \"./node_modules/css-loader/index.js!./web-server/css/slycat-additions.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWItc2VydmVyL2Nzcy9zbHljYXQtYWRkaXRpb25zLmNzcz9jOTdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBOztBQUVBOztBQUVBIiwiZmlsZSI6Ii4vd2ViLXNlcnZlci9jc3Mvc2x5Y2F0LWFkZGl0aW9ucy5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zbHljYXQtYWRkaXRpb25zLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zbHljYXQtYWRkaXRpb25zLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc2x5Y2F0LWFkZGl0aW9ucy5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./web-server/css/slycat-additions.css\n");

/***/ }),

/***/ "./web-server/js/chunker.js":
/*!**********************************!*\
  !*** ./web-server/js/chunker.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.is_little_endian = is_little_endian;\nexports.get_model_array_attribute_metadata = get_model_array_attribute_metadata;\nexports.cast_array_buffer = cast_array_buffer;\nexports.get_model_array_attribute = get_model_array_attribute;\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract  DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government  retains certain rights in this software. */\n\nvar arrayset_metadata_cache = exports.arrayset_metadata_cache = {};\n\nfunction is_little_endian() {\n  if (window.result === undefined) window.result = new Uint32Array(new Uint8Array([1, 2, 3, 4]).buffer)[0] === 0x04030201;\n  return window.result;\n}\n\n// Retrieve an array attribute's metadata asynchronously, calling a callback when it's ready ...\nfunction get_model_array_attribute_metadata(parameters, dfd) {\n  return $.ajax({\n    url: parameters.server_root + \"models/\" + parameters.mid + \"/arraysets/\" + parameters.aid + \"/metadata?arrays=\" + parameters.array,\n    contentType: \"application/json\",\n    success: function success(result) {\n      parameters.metadata = result.arrays[0];\n      if (parameters.metadataSuccess !== undefined) {\n        parameters.metadataSuccess(parameters);\n      } else {\n        parameters.success(parameters);\n      }\n    },\n    error: function error(request, status, reason_phrase) {\n      if (parameters.error) parameters.error(request, status, reason_phrase);\n    },\n    always: function always() {\n      dfd.resolve();\n    }\n  });\n}\n\n// Cast a generic arraybuffer to a typed array, with an optional offset and\n// count.  Note that offset and count are measured in elements, not bytes.\nfunction cast_array_buffer(buffer, type, offset, count) {\n  if (type == \"int32\") {\n    if (offset !== undefined) return new Int32Array(buffer, offset * 4, count);else return new Int32Array(buffer);\n  } else if (type == \"int16\") {\n    if (offset !== undefined) return new Int16Array(buffer, offset * 2, count);else return new Int16Array(buffer);\n  } else if (type == \"int8\") {\n    if (offset !== undefined) return new Int8Array(buffer, offset, count);else return new Int8Array(buffer);\n  } else if (type == \"uint32\") {\n    if (offset !== undefined) return new Uint32Array(buffer, offset * 4, count);else return new Uint32Array(buffer);\n  } else if (type == \"uint16\") {\n    if (offset !== undefined) return new Uint16Array(buffer, offset * 2, count);else return new Uint16Array(buffer);\n  } else if (type == \"uint8\") {\n    if (offset !== undefined) return new Uint8Array(buffer, offset, count);else return new Uint8Array(buffer);\n  } else if (type == \"float64\") {\n    if (offset !== undefined) return new Float64Array(buffer, offset * 8, count);else return new Float64Array(buffer);\n  } else if (type == \"float32\") {\n    if (offset !== undefined) return new Float32Array(buffer, offset * 4, count);else return new Float32Array(buffer);\n  } else console.error(\"Unknown array buffer type: \" + type);\n}\n\n// Retrieve an array attribute asynchronously, calling a callback when it's ready ...\nfunction get_model_array_attribute(parameters) {\n  var dfd = $.Deferred();\n  if (parameters.metadata === undefined) {\n    parameters.metadataSuccess = retrieve_model_array_attribute;\n    get_model_array_attribute_metadata(parameters, dfd);\n  } else {\n    retrieve_model_array_attribute(parameters);\n  }\n  return dfd;\n\n  function retrieve_model_array_attribute(parameters) {\n    var ranges = [];\n    var range = '';\n    var metadata = parameters.metadata;\n    var attribute = parameters.attribute;\n    var isStringAttribute = metadata.attributes[attribute].type == \"string\";\n    var byteorder = \"&byteorder=\" + (is_little_endian() ? \"little\" : \"big\");\n    if (isStringAttribute) {\n      byteorder = \"\";\n    }\n\n    for (var dimension in metadata.dimensions) {\n      range = '';\n      range += metadata.dimensions[dimension].begin;\n      range += ':';\n      range += metadata.dimensions[dimension].end;\n      ranges.push(range);\n    }\n    ranges = ranges.join(\"|\");\n\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", parameters.server_root + \"models/\" + parameters.mid + \"/arraysets/\" + parameters.aid + \"/data?hyperchunks=\" + parameters.array + \"/\" + parameters.attribute + \"/\" + ranges + byteorder);\n    if (!isStringAttribute) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.success = parameters.success;\n    request.attribute = parameters.attribute;\n    request.metadata = metadata;\n    request.isStringAttribute = isStringAttribute;\n    request.onload = function (e) {\n      var buffer = this.response;\n      var metadata = this.metadata;\n      var attribute = this.metadata.attributes[this.attribute];\n      var result;\n\n      if (metadata.dimensions.length == 1) {\n        if (!this.isStringAttribute) {\n          result = cast_array_buffer(buffer, attribute.type);\n        } else {\n          result = JSON.parse(this.responseText);\n        }\n      } else if (metadata.dimensions.length == 2) {\n        var row_count = metadata.dimensions[0].end - metadata.dimensions[0].begin;\n        var column_count = metadata.dimensions[1].end - metadata.dimensions[1].begin;\n        var result = [];\n        for (var i = 0; i != row_count; ++i) {\n          result.push(cast_array_buffer(buffer, attribute.type, i * column_count, column_count));\n        }\n      } else {\n        window.alert(\"Can't handle array with \" + metadata.dimensions.length + \" dimensions.\");\n      }\n      this.success(result);\n      dfd.resolve();\n    };\n    request.send();\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./web-server/js/chunker.js\n");

/***/ }),

/***/ "./web-server/js/slick.slycateditors.js":
/*!**********************************************!*\
  !*** ./web-server/js/slick.slycateditors.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(jQuery) {\n\n/* Copyright (c) 2013, 2018 National Technology and Engineering Solutions of Sandia, LLC . Under the terms of Contract  DE-NA0003525 with National Technology and Engineering Solutions of Sandia, LLC, the U.S. Government  retains certain rights in this software. */\n\n/***\n * Contains Slycat SlickGrid editors.\n * @module Slycateditors\n * @namespace Slick\n */\n\n(function ($) {\n  // register namespace\n  $.extend(true, window, {\n    \"Slick\": {\n      \"Slycateditors\": {\n        \"Text\": TextEditor,\n        \"Integer\": IntegerEditor,\n        \"Date\": DateEditor,\n        \"YesNoSelect\": YesNoSelectEditor,\n        \"Checkbox\": CheckboxEditor,\n        \"PercentComplete\": PercentCompleteEditor,\n        \"LongText\": LongTextEditor,\n        \"Rating\": RatingEditor\n      }\n    }\n  });\n\n  function TextEditor(args) {\n    var $input;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $input = $(\"<INPUT type=text class='editor-text' />\").appendTo(args.container).bind(\"keydown.nav\", function (e) {\n        if (e.keyCode === $.ui.keyCode.LEFT || e.keyCode === $.ui.keyCode.RIGHT) {\n          e.stopImmediatePropagation();\n        }\n      }).focus().select();\n    };\n\n    this.destroy = function () {\n      $input.remove();\n    };\n\n    this.focus = function () {\n      $input.focus();\n    };\n\n    this.getValue = function () {\n      return $input.val();\n    };\n\n    this.setValue = function (val) {\n      $input.val(val);\n    };\n\n    this.loadValue = function (item) {\n      defaultValue = item[args.column.field] || \"\";\n      $input.val(defaultValue);\n      $input[0].defaultValue = defaultValue;\n      $input.select();\n    };\n\n    this.serializeValue = function () {\n      return $input.val();\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return !($input.val() == \"\" && defaultValue == null) && $input.val() != defaultValue;\n    };\n\n    this.validate = function () {\n      if (args.column.validator) {\n        var validationResults = args.column.validator($input.val());\n        if (!validationResults.valid) {\n          return validationResults;\n        }\n      }\n\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function IntegerEditor(args) {\n    var $input;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $input = $(\"<INPUT type=text class='editor-text' />\");\n\n      $input.bind(\"keydown.nav\", function (e) {\n        if (e.keyCode === $.ui.keyCode.LEFT || e.keyCode === $.ui.keyCode.RIGHT) {\n          e.stopImmediatePropagation();\n        }\n      });\n\n      $input.appendTo(args.container);\n      $input.focus().select();\n    };\n\n    this.destroy = function () {\n      $input.remove();\n    };\n\n    this.focus = function () {\n      $input.focus();\n    };\n\n    this.loadValue = function (item) {\n      defaultValue = item[args.column.field];\n      $input.val(defaultValue);\n      $input[0].defaultValue = defaultValue;\n      $input.select();\n    };\n\n    this.serializeValue = function () {\n      return parseInt($input.val(), 10) || 0;\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return !($input.val() == \"\" && defaultValue == null) && $input.val() != defaultValue;\n    };\n\n    this.validate = function () {\n      if (isNaN($input.val())) {\n        return {\n          valid: false,\n          msg: \"Please enter a valid integer\"\n        };\n      }\n\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function DateEditor(args) {\n    var $input;\n    var defaultValue;\n    var scope = this;\n    var calendarOpen = false;\n\n    this.init = function () {\n      $input = $(\"<INPUT type=text class='editor-text' />\");\n      $input.appendTo(args.container);\n      $input.focus().select();\n      $input.datepicker({\n        showOn: \"button\",\n        buttonImageOnly: true,\n        buttonImage: \"../images/calendar.gif\",\n        beforeShow: function beforeShow() {\n          calendarOpen = true;\n        },\n        onClose: function onClose() {\n          calendarOpen = false;\n        }\n      });\n      $input.width($input.width() - 18);\n    };\n\n    this.destroy = function () {\n      $.datepicker.dpDiv.stop(true, true);\n      $input.datepicker(\"hide\");\n      $input.datepicker(\"destroy\");\n      $input.remove();\n    };\n\n    this.show = function () {\n      if (calendarOpen) {\n        $.datepicker.dpDiv.stop(true, true).show();\n      }\n    };\n\n    this.hide = function () {\n      if (calendarOpen) {\n        $.datepicker.dpDiv.stop(true, true).hide();\n      }\n    };\n\n    this.position = function (position) {\n      if (!calendarOpen) {\n        return;\n      }\n      $.datepicker.dpDiv.css(\"top\", position.top + 30).css(\"left\", position.left);\n    };\n\n    this.focus = function () {\n      $input.focus();\n    };\n\n    this.loadValue = function (item) {\n      defaultValue = item[args.column.field];\n      $input.val(defaultValue);\n      $input[0].defaultValue = defaultValue;\n      $input.select();\n    };\n\n    this.serializeValue = function () {\n      return $input.val();\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return !($input.val() == \"\" && defaultValue == null) && $input.val() != defaultValue;\n    };\n\n    this.validate = function () {\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function YesNoSelectEditor(args) {\n    var $select;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $select = $(\"<SELECT tabIndex='0' class='editor-yesno'><OPTION value='yes'>Yes</OPTION><OPTION value='no'>No</OPTION></SELECT>\");\n      $select.appendTo(args.container);\n      $select.focus();\n    };\n\n    this.destroy = function () {\n      $select.remove();\n    };\n\n    this.focus = function () {\n      $select.focus();\n    };\n\n    this.loadValue = function (item) {\n      $select.val((defaultValue = item[args.column.field]) ? \"yes\" : \"no\");\n      $select.select();\n    };\n\n    this.serializeValue = function () {\n      return $select.val() == \"yes\";\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return $select.val() != defaultValue;\n    };\n\n    this.validate = function () {\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function CheckboxEditor(args) {\n    var $select;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $select = $(\"<INPUT type=checkbox value='true' class='editor-checkbox' hideFocus>\");\n      $select.appendTo(args.container);\n      $select.focus();\n    };\n\n    this.destroy = function () {\n      $select.remove();\n    };\n\n    this.focus = function () {\n      $select.focus();\n    };\n\n    this.loadValue = function (item) {\n      defaultValue = !!item[args.column.field];\n      if (defaultValue) {\n        $select.prop('checked', true);\n      } else {\n        $select.prop('checked', false);\n      }\n    };\n\n    this.serializeValue = function () {\n      return $select.prop('checked');\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return this.serializeValue() !== defaultValue;\n    };\n\n    this.validate = function () {\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function PercentCompleteEditor(args) {\n    var $input, $picker;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $input = $(\"<INPUT type=text class='editor-percentcomplete' />\");\n      $input.width($(args.container).innerWidth() - 25);\n      $input.appendTo(args.container);\n\n      $picker = $(\"<div class='editor-percentcomplete-picker' />\").appendTo(args.container);\n      $picker.append(\"<div class='editor-percentcomplete-helper'><div class='editor-percentcomplete-wrapper'><div class='editor-percentcomplete-slider' /><div class='editor-percentcomplete-buttons' /></div></div>\");\n\n      $picker.find(\".editor-percentcomplete-buttons\").append(\"<button val=0>Not started</button><br/><button val=50>In Progress</button><br/><button val=100>Complete</button>\");\n\n      $input.focus().select();\n\n      $picker.find(\".editor-percentcomplete-slider\").slider({\n        orientation: \"vertical\",\n        range: \"min\",\n        value: defaultValue,\n        slide: function slide(event, ui) {\n          $input.val(ui.value);\n        }\n      });\n\n      $picker.find(\".editor-percentcomplete-buttons button\").bind(\"click\", function (e) {\n        $input.val($(this).attr(\"val\"));\n        $picker.find(\".editor-percentcomplete-slider\").slider(\"value\", $(this).attr(\"val\"));\n      });\n    };\n\n    this.destroy = function () {\n      $input.remove();\n      $picker.remove();\n    };\n\n    this.focus = function () {\n      $input.focus();\n    };\n\n    this.loadValue = function (item) {\n      $input.val(defaultValue = item[args.column.field]);\n      $input.select();\n    };\n\n    this.serializeValue = function () {\n      return parseInt($input.val(), 10) || 0;\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return !($input.val() == \"\" && defaultValue == null) && (parseInt($input.val(), 10) || 0) != defaultValue;\n    };\n\n    this.validate = function () {\n      if (isNaN(parseInt($input.val(), 10))) {\n        return {\n          valid: false,\n          msg: \"Please enter a valid positive number\"\n        };\n      }\n\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  /*\n   * An example of a \"detached\" editor.\n   * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n   * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n   */\n  function LongTextEditor(args) {\n    var $input, $wrapper;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      var $container = $(\"body\");\n\n      $wrapper = $(\"<DIV style='z-index:10000;position:absolute;background:white;padding:5px;border:3px solid gray; -moz-border-radius:10px; border-radius:10px;'/>\").appendTo($container);\n\n      $input = $(\"<TEXTAREA hidefocus rows=5 style='backround:white;width:250px;height:80px;border:0;outline:0'>\").appendTo($wrapper);\n\n      $(\"<DIV style='text-align:right'><BUTTON>Save</BUTTON><BUTTON>Cancel</BUTTON></DIV>\").appendTo($wrapper);\n\n      $wrapper.find(\"button:first\").bind(\"click\", this.save);\n      $wrapper.find(\"button:last\").bind(\"click\", this.cancel);\n      $input.bind(\"keydown\", this.handleKeyDown);\n\n      scope.position(args.position);\n      $input.focus().select();\n    };\n\n    this.handleKeyDown = function (e) {\n      if (e.which == $.ui.keyCode.ENTER && e.ctrlKey) {\n        scope.save();\n      } else if (e.which == $.ui.keyCode.ESCAPE) {\n        e.preventDefault();\n        scope.cancel();\n      } else if (e.which == $.ui.keyCode.TAB && e.shiftKey) {\n        e.preventDefault();\n        args.grid.navigatePrev();\n      } else if (e.which == $.ui.keyCode.TAB) {\n        e.preventDefault();\n        args.grid.navigateNext();\n      }\n    };\n\n    this.save = function () {\n      args.commitChanges();\n    };\n\n    this.cancel = function () {\n      $input.val(defaultValue);\n      args.cancelChanges();\n    };\n\n    this.hide = function () {\n      $wrapper.hide();\n    };\n\n    this.show = function () {\n      $wrapper.show();\n    };\n\n    this.position = function (position) {\n      $wrapper.css(\"top\", position.top - 5).css(\"left\", position.left - 5);\n    };\n\n    this.destroy = function () {\n      $wrapper.remove();\n    };\n\n    this.focus = function () {\n      $input.focus();\n    };\n\n    this.loadValue = function (item) {\n      $input.val(defaultValue = item[args.column.field]);\n      $input.select();\n    };\n\n    this.serializeValue = function () {\n      return $input.val();\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return !($input.val() == \"\" && defaultValue == null) && $input.val() != defaultValue;\n    };\n\n    this.validate = function () {\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n\n  function RatingEditor(args) {\n    var $select;\n    var defaultValue;\n    var scope = this;\n\n    this.init = function () {\n      $select = $(\"<INPUT type=checkbox value='true' class='editor-checkbox' hideFocus>\");\n      $select.appendTo(args.container);\n      $select.focus();\n    };\n\n    this.destroy = function () {\n      $select.remove();\n    };\n\n    this.focus = function () {\n      $select.focus();\n    };\n\n    this.loadValue = function (item) {\n      defaultValue = !!item[args.column.field];\n      if (defaultValue) {\n        $select.prop('checked', true);\n      } else {\n        $select.prop('checked', false);\n      }\n    };\n\n    this.serializeValue = function () {\n      return $select.prop('checked');\n    };\n\n    this.applyValue = function (item, state) {\n      item[args.column.field] = state;\n    };\n\n    this.isValueChanged = function () {\n      return this.serializeValue() !== defaultValue;\n    };\n\n    this.validate = function () {\n      return {\n        valid: true,\n        msg: null\n      };\n    };\n\n    this.init();\n  }\n})(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./web-server/js/slick.slycateditors.js\n");

/***/ })

}]);